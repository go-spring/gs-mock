// Code generated by gs-mock v0.0.3. DO NOT EDIT.
// Source: https://github.com/go-spring/gs-mock
// gs mock

package all_default

import (
	"github.com/go-spring/gs-mock/gsmock"
	"io"
	"reflect"
)

type CloserMockImpl struct {
	io.Writer

	r *gsmock.Manager
}

func NewCloserMockImpl(r *gsmock.Manager) *CloserMockImpl {
	return &CloserMockImpl{r: r}
}

func (impl *CloserMockImpl) Close() error {
	t := reflect.TypeFor[CloserMockImpl]()
	if ret, ok := gsmock.Invoke(impl.r, t, "Close"); ok {
		return gsmock.Unbox1[error](ret)
	}
	panic("no mock code matched")
}

func (impl *CloserMockImpl) MockClose() *gsmock.Mocker01[error] {
	t := reflect.TypeFor[CloserMockImpl]()
	return gsmock.NewMocker01[error](impl.r, t, "Close")
}
